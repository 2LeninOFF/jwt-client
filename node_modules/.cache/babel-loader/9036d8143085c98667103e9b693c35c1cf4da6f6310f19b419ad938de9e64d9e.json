{"ast":null,"code":"var _jsxFileName = \"E:\\\\GNT2\\\\jwt-auth\\\\client\\\\src\\\\components\\\\LoginForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport { Context } from \"../index\";\nimport { observer } from \"mobx-react-lite\";\nimport { MAIN_ROUTE } from \"../utils/consts\";\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = _s(observer(_c = _s(() => {\n  _s();\n  console.log(\"LoginForm\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    store\n  } = useContext(Context);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-background\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"for-dobro\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"dobro\",\n        children: \"\\u0414\\u043E\\u0431\\u0440\\u043E \\u043F\\u043E\\u0436\\u0430\\u043B\\u043E\\u0432\\u0430\\u0442\\u044C!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input1\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setEmail(e.target.value),\n          value: email,\n          type: \"text\",\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input2\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setPassword(e.target.value),\n          value: password,\n          type: \"password\",\n          placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"button-log2\",\n      onClick: () => store.login(email, password),\n      children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: store.isAuth ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: MAIN_ROUTE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}, \"YkObW/YCtqy+WSLJzjgYp+VdvpM=\")), \"YkObW/YCtqy+WSLJzjgYp+VdvpM=\");\n_c2 = LoginForm;\nexport default LoginForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoginForm$observer\");\n$RefreshReg$(_c2, \"LoginForm\");","map":{"version":3,"names":["React","useContext","useState","Context","observer","MAIN_ROUTE","Redirect","jsxDEV","_jsxDEV","LoginForm","_s","_c","console","log","email","setEmail","password","setPassword","store","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","type","placeholder","id","onClick","login","isAuth","to","_c2","$RefreshReg$"],"sources":["E:/GNT2/jwt-auth/client/src/components/LoginForm.tsx"],"sourcesContent":["import React, { FC, useContext, useState } from \"react\";\r\nimport { Context } from \"../index\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { LOGIN_ROUTE, MAIN_ROUTE, REG_ROUTE } from \"../utils/consts\";\r\nimport { NavLink, useLocation, useHistory } from \"react-router-dom\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nconst LoginForm = observer(() => {\r\n  console.log(\"LoginForm\");\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const { store } = useContext(Context);\r\n  return (\r\n    <div className=\"app-background\">\r\n      {/* <div className=\"for-smesharik\">\r\n      <img\r\n        className=\"smesharik\"\r\n        src=\"https://g.epal.gg/entry/us/static/icon_avatar.65e5ba51.png\"\r\n      ></img>\r\n      </div> */}\r\n      <div className=\"for-dobro\">\r\n      <h2 className=\"dobro\">Добро пожаловать!</h2>\r\n      </div>\r\n      <div className=\"inputs\">\r\n        <div className=\"input1\">\r\n          <input\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            value={email}\r\n            type=\"text\"\r\n            placeholder=\"Email\"\r\n          />\r\n        </div>\r\n        <div className=\"input2\">\r\n          <input\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            value={password}\r\n            type=\"password\"\r\n            placeholder=\"Пароль\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <button id=\"button-log2\" onClick={() => store.login(email, password)}>\r\n        Войти\r\n      </button>\r\n      <h1>\r\n        {store.isAuth ? (\r\n          <Redirect to={MAIN_ROUTE} />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </h1>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\GNT2\\\\jwt-auth\\\\client\\\\src\\\\components\\\\RegForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport { Context } from \"../index\";\nimport { observer } from \"mobx-react-lite\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegForm = _s(observer(_c = _s(() => {\n  _s();\n  const history = useHistory();\n  console.log(\"RegForm\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    store\n  } = useContext(Context);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-background\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"smesharik\",\n      src: \"https://g.epal.gg/entry/us/static/icon_avatar.65e5ba51.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input1\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setEmail(e.target.value),\n          value: email,\n          type: \"text\",\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input2\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setPassword(e.target.value),\n          value: password,\n          type: \"password\",\n          placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"button-log2\",\n      onClick: () => {\n        store.registration(email, password);\n        history.push(AFTER_REG_ROUTE);\n      },\n      children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: store.isAuth ? `Письмо для активации аккаунта отправлено на почту ${store.user.email}. Пожалуйста, перейдите по ссылке в письме, чтобы завершить регистрацию` : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}, \"VxsFxMRSyluRae5AedvpScf+EaA=\", false, function () {\n  return [useHistory];\n})), \"VxsFxMRSyluRae5AedvpScf+EaA=\", false, function () {\n  return [useHistory];\n});\n_c2 = RegForm;\nexport default RegForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"RegForm$observer\");\n$RefreshReg$(_c2, \"RegForm\");","map":{"version":3,"names":["React","useContext","useState","Context","observer","useHistory","jsxDEV","_jsxDEV","RegForm","_s","_c","history","console","log","email","setEmail","password","setPassword","store","className","children","src","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","type","placeholder","id","onClick","registration","push","AFTER_REG_ROUTE","isAuth","user","_c2","$RefreshReg$"],"sources":["E:/GNT2/jwt-auth/client/src/components/RegForm.tsx"],"sourcesContent":["import React, { FC, useContext, useState } from \"react\";\r\nimport { Context } from \"../index\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { LOGIN_ROUTE, MAIN_ROUTE, REG_ROUTE } from \"../utils/consts\";\r\nimport { NavLink, useLocation, useHistory } from \"react-router-dom\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\n\r\nconst RegForm = observer(() => {\r\n  const history = useHistory();\r\n  console.log(\"RegForm\");\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const { store } = useContext(Context);\r\n  return (\r\n    <div className=\"app-background\">\r\n      <img\r\n        className=\"smesharik\"\r\n        src=\"https://g.epal.gg/entry/us/static/icon_avatar.65e5ba51.png\"\r\n      ></img>\r\n      <div className=\"inputs\">\r\n        <div className=\"input1\">\r\n          <input\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            value={email}\r\n            type=\"text\"\r\n            placeholder=\"Email\"\r\n          />\r\n        </div>\r\n        <div className=\"input2\">\r\n          <input\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            value={password}\r\n            type=\"password\"\r\n            placeholder=\"Пароль\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <button\r\n        id=\"button-log2\"\r\n        onClick={() => {store.registration(email, password); history.push(AFTER_REG_ROUTE)}}\r\n      >\r\n        Зарегистрироваться\r\n      </button>\r\n      <h1>\r\n        {store.isAuth\r\n          ? `Письмо для активации аккаунта отправлено на почту ${store.user.email}. Пожалуйста, перейдите по ссылке в письме, чтобы завершить регистрацию`\r\n          : \"\"}\r\n      </h1>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default RegForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}